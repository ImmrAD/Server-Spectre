rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Allow read access to authenticated users
    match /{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() &&
        request.resource.size < 5 * 1024 * 1024 && // 5MB max file size
        request.resource.contentType.matches('image/.*|video/.*|application/.*'); // Restrict file types
    }

    // User-specific storage rules
    match /users/{userId}/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }

    // Scenario assets storage rules
    match /scenarios/{scenarioId}/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}